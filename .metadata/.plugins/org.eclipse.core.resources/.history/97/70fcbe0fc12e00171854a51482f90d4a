
public class RubiksCube {
	/*
	 *		 G G G
	 * 		 G 0 G
	 * 		 G G G
	 * O O O W W W R R R Y Y Y
	 * O 1 O W 2 W R 3 R Y 4 Y
	 * O O O W W W R R R Y Y Y
	 *		 B B B
	 *		 B 5 B
	 *		 B B B
	 */
	private int orient = 2; // which side is up

	// #0
	private char[][] G = { { 'g', 'g', 'g' }, { 'g', 'g', 'g' }, { 'g', 'g', 'g' } };
	// #1
	private char[][] O = { { 'o', 'o', 'o' }, { 'o', 'o', 'o' }, { 'o', 'o', 'o' } };
	// #2
	private char[][] W = {
			{ 'w', 'w', 'w'},
			{ 'w', 'w', 'w'},
			{ 'w', 'w', 'w'}
	};
	// #3
	private char[][] R = { { 'r', 'r', 'r' }, { 'r', 'r', 'r' }, { 'r', 'r', 'r' } };
	// #4
	private char[][] Y = {
			{'y', 'y', 'y'},
			{'y', 'y', 'y'},
			{'y', 'y', 'y'}
	};

	// #5
	private char[][] B = {
			{'b', 'b', 'b'},
			{'b', 'b', 'b'},
			{'b', 'b', 'b'}
	};

	private char[][][] cube = {
			G, O, W, R, Y, B
	};

	public void R() {

	}
	public void RI() {

	}

	public RubiksCube() {

	}

	@Override
	public String toString() {
		String out = "";
		for (char[])
	}
	public static void main(String[] args) {
		RubiksCube cube = new RubiksCube();
		System.out.println();
	}
}
