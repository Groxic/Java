import java.util.ArrayList;

public class Face {
	public ArrayList<ArrayList<Object>> face;
	private Face aboveFace;
	private Face belowFace;
	private Face leftFace;
	private Face rightFace;

	public Face() {}

	public Face(Object o) {
		face = new ArrayList<ArrayList<Object>>(3);
		face.add(new ArrayList<Object>(3));
		face.add(new ArrayList<Object>(3));
		face.add(new ArrayList<Object>(3));
		if (o instanceof Character) {
			Character ch = (Character) o;
			for (int r = 0; r < 3; r++) {
				face.get(r).add(new Character(ch));
			}
		}
		else if (o instanceof ColorRect) {
			ColorRect cR = (ColorRect) o;
			for (int r = 0; r < 3; r++) {
				face.get(r).add(new ColorRect(cR));
			}
		}
		else {
			for (int r = 0; r < 3; r++) {
				for (int c = 0; c < 3; c++) {
					face.get(r).add(o);
				}
			}
		}
	}

	public void setAbove(Face f) {
		aboveFace = f;
	}

	public void setBelow(Face f) {
		belowFace = f;
	}

	public void setLeft(Face f) {
		leftFace = f;
	}

	public void setRight(Face f) {
		rightFace = f;
	}

	public void rotateClockWise() {
		Object temp = face.get(0).get(0);
		Object temp2 = face.get(1).get(0);
		face.get(0).set(0, face.get(2).get(0));
		face.get(1).set(0, face.get(2).get(1));
		face.get(2).set(0, face.get(2).get(2));
		face.get(2).set(1, face.get(1).get(2));
		face.get(2).set(2, face.get(0).get(2));
		face.get(1).set(2, face.get(0).get(1));
		face.get(0).set(2, temp);
		face.get(0).set(1, temp2);

		switch ((char) face.get(0).get(1)) {
			case 'w': {
				ArrayList<Object> tempArr = aboveFace.getSide('b');
				aboveFace.setSide('b', leftFace.getSide('r'), true);
				leftFace.setSide('r', belowFace.getSide('t'), false);
				belowFace.setSide('t', rightFace.getSide('l'), true);
				rightFace.setSide('l', tempArr, false);
				break;
			}
			case 'y': {
				ArrayList<Object> tempArr = aboveFace.getSide('t');
				aboveFace.setSide('t', leftFace.getSide('r'), false);
				leftFace.setSide('r', belowFace.getSide('b'), true);
				belowFace.setSide('b', rightFace.getSide('l'), false);
				rightFace.setSide('l', tempArr, true);
				break;
			}
			case 'g': {
				ArrayList<Object> tempArr = aboveFace.getSide('t');
				aboveFace.setSide('t', leftFace.getSide('t'), false);
				leftFace.setSide('t', belowFace.getSide('t'), false);
				belowFace.setSide('t', rightFace.getSide('t'), false);
				rightFace.setSide('t', tempArr, false);
				break;
			}
			case 'b': {
				ArrayList<Object> tempArr = aboveFace.getSide('b');
				aboveFace.setSide('b', leftFace.getSide('b'), false);
				leftFace.setSide('b', belowFace.getSide('b'), false);
				belowFace.setSide('b', rightFace.getSide('b'), false);
				rightFace.setSide('b', tempArr, false);
				break;
			}
			case 'o': {
				ArrayList<Object> tempArr = aboveFace.getSide('l');
				aboveFace.setSide('l', leftFace.getSide('r'), true);
				leftFace.setSide('r', belowFace.getSide('l'), true);
				belowFace.setSide('l', rightFace.getSide('l'), false);
				rightFace.setSide('l', tempArr, false);
				break;
			}
			case 'r': {
				ArrayList<Object> tempArr = aboveFace.getSide('r');
				aboveFace.setSide('r', leftFace.getSide('r'), false);
				leftFace.setSide('r', belowFace.getSide('r'), false);
				belowFace.setSide('r', rightFace.getSide('l'), true);
				rightFace.setSide('l', tempArr, true);
				break;
			}
		}
	}

	public void rotateCounterClockWise() {
		Object temp = face.get(0).get(0);
		Object temp2 = face.get(0).get(1);
		face.get(0).set(0, face.get(0).get(2));
		face.get(0).set(1, face.get(1).get(2));
		face.get(0).set(2, face.get(2).get(2));
		face.get(1).set(2, face.get(2).get(1));
		face.get(2).set(2, face.get(2).get(0));
		face.get(2).set(1, face.get(1).get(0));
		face.get(2).set(0, temp);
		face.get(2).set(0, temp2);

		switch ((char) face.get(1).get(1)) {
			case 'w': {
				ArrayList<Object> tempArr = aboveFace.getSide('b');
				aboveFace.setSide('b', rightFace.getSide('l'), false);
				rightFace.setSide('l', belowFace.getSide('t'), true);
				belowFace.setSide('t', leftFace.getSide('r'), false);
				leftFace.setSide('r', tempArr, true);
				break;
			}
			case 'y': {
				ArrayList<Object> tempArr = aboveFace.getSide('t');
				aboveFace.setSide('t', rightFace.getSide('l'), true);
				rightFace.setSide('l', belowFace.getSide('b'), false);
				belowFace.setSide('b', leftFace.getSide('r'), true);
				leftFace.setSide('r', tempArr, false);
				break;
			}
			case 'g': {
				ArrayList<Object> tempArr = aboveFace.getSide('t');
				aboveFace.setSide('t', rightFace.getSide('t'), false);
				rightFace.setSide('t', belowFace.getSide('t'), false);
				belowFace.setSide('t', leftFace.getSide('t'), false);
				leftFace.setSide('t', tempArr, false);
				break;
			}
			case 'b': {
				ArrayList<Object> tempArr = aboveFace.getSide('b');
				aboveFace.setSide('b', rightFace.getSide('b'), false);
				rightFace.setSide('b', belowFace.getSide('b'), false);
				belowFace.setSide('b', leftFace.getSide('b'), false);
				leftFace.setSide('b', tempArr, false);
				break;
			}
			case 'o': {
				ArrayList<Object> tempArr = aboveFace.getSide('l');
				aboveFace.setSide('l', rightFace.getSide('l'), false);
				rightFace.setSide('l', belowFace.getSide('l'), false);
				belowFace.setSide('l', leftFace.getSide('r'), true);
				leftFace.setSide('r', tempArr, true);
				break;
			}
			case 'r': {
				ArrayList<Object> tempArr = aboveFace.getSide('r');
				aboveFace.setSide('r', rightFace.getSide('l'), true);
				rightFace.setSide('l', belowFace.getSide('r'), true);
				belowFace.setSide('r', leftFace.getSide('r'), false);
				leftFace.setSide('r', tempArr, false);
				break;
			}
		}
	}

	public void print(String prefix) {
		for (int i = 0; i < 3; i++) {
			System.out.print(prefix);
			printRow(i);
			System.out.println();
		}
	}

	public void printRow(int rNum) {
		for (Object c : face.get(rNum))
		{
			System.out.print(c + " ");
		}
	}

	public void setSide(char side, ArrayList<Object> to, boolean reverse) {
		if (reverse)
		{
			int size = 3;
			for (int i = 0; i < size / 2; i++)
			{
				Object temp = to.get(i);
				to.set(i, to.get(size - 1 - i));
				to.set(size - 1 - i, temp);
			}
		}
		switch (side) {
			case 't': {
				face.set(0, to);
				break;
			}
			case 'b': {
				face.set(2, to);
				break;
			}
			case 'l': {
				int i = 0;
				for (Object c : to)
				{
					face.get(i).set(0, c);
					i++;
				}
				break;
			}
			case 'r': {
				int i = 0;
				for (Object c : to)
				{
					face.get(i).set(2, c);
					i++;
				}
				break;
			}
			default:
				break;
		}
	}

	public ArrayList<Object> getSide(char s) {
		switch (s) {
			case 't': {
				return new ArrayList<Object>(face.get(0));
			}
			case 'b': {
				return new ArrayList<Object>(face.get(2));
			}
			case 'l': {
				ArrayList<Object> arr = new ArrayList<Object>(3);
				for (int r = 0; r < 3; r++)
				{
					arr.add(face.get(r).get(0));
				}
				return arr;

			}
			case 'r': {
				ArrayList<Object> arr = new ArrayList<Object>(3);
				for (int r = 0; r < 3; r++)
				{
					arr.add(face.get(r).get(2));
				}
				return arr;
			}
		}
		return null;
	}
}
